// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package _interface

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MkdirRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkdirRequest) Reset()         { *m = MkdirRequest{} }
func (m *MkdirRequest) String() string { return proto.CompactTextString(m) }
func (*MkdirRequest) ProtoMessage()    {}
func (*MkdirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *MkdirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkdirRequest.Unmarshal(m, b)
}
func (m *MkdirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkdirRequest.Marshal(b, m, deterministic)
}
func (m *MkdirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkdirRequest.Merge(m, src)
}
func (m *MkdirRequest) XXX_Size() int {
	return xxx_messageInfo_MkdirRequest.Size(m)
}
func (m *MkdirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MkdirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MkdirRequest proto.InternalMessageInfo

func (m *MkdirRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UploadRequest struct {
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

type CompileRequest struct {
	Client               string   `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompileRequest) Reset()         { *m = CompileRequest{} }
func (m *CompileRequest) String() string { return proto.CompactTextString(m) }
func (*CompileRequest) ProtoMessage()    {}
func (*CompileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

func (m *CompileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompileRequest.Unmarshal(m, b)
}
func (m *CompileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompileRequest.Marshal(b, m, deterministic)
}
func (m *CompileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompileRequest.Merge(m, src)
}
func (m *CompileRequest) XXX_Size() int {
	return xxx_messageInfo_CompileRequest.Size(m)
}
func (m *CompileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompileRequest proto.InternalMessageInfo

func (m *CompileRequest) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

type ShellCommandRequest struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShellCommandRequest) Reset()         { *m = ShellCommandRequest{} }
func (m *ShellCommandRequest) String() string { return proto.CompactTextString(m) }
func (*ShellCommandRequest) ProtoMessage()    {}
func (*ShellCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

func (m *ShellCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShellCommandRequest.Unmarshal(m, b)
}
func (m *ShellCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShellCommandRequest.Marshal(b, m, deterministic)
}
func (m *ShellCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShellCommandRequest.Merge(m, src)
}
func (m *ShellCommandRequest) XXX_Size() int {
	return xxx_messageInfo_ShellCommandRequest.Size(m)
}
func (m *ShellCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShellCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShellCommandRequest proto.InternalMessageInfo

func (m *ShellCommandRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type Reply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{4}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*MkdirRequest)(nil), "interface.MkdirRequest")
	proto.RegisterType((*UploadRequest)(nil), "interface.UploadRequest")
	proto.RegisterType((*CompileRequest)(nil), "interface.CompileRequest")
	proto.RegisterType((*ShellCommandRequest)(nil), "interface.ShellCommandRequest")
	proto.RegisterType((*Reply)(nil), "interface.Reply")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xad, 0x68, 0x4b, 0x87, 0x55, 0x24, 0x82, 0xae, 0x1e, 0x44, 0xe3, 0xa5, 0xa7, 0x15,
	0xf4, 0xa6, 0x07, 0xc1, 0x82, 0x9e, 0x04, 0x59, 0xf1, 0x07, 0xc4, 0x74, 0xaa, 0xd1, 0x49, 0x66,
	0xcd, 0xc6, 0x83, 0xbf, 0xc0, 0xbf, 0x5d, 0xba, 0xdd, 0x2c, 0x59, 0xd8, 0xdb, 0x4c, 0xf2, 0xe5,
	0x3d, 0xde, 0x0b, 0x64, 0x9a, 0xad, 0x65, 0x57, 0x54, 0x9e, 0x03, 0x8b, 0xa9, 0x71, 0x01, 0xfd,
	0x52, 0x69, 0x94, 0x12, 0xb2, 0xe7, 0xef, 0x85, 0xf1, 0x25, 0xfe, 0xfc, 0x62, 0x1d, 0x84, 0x80,
	0x1d, 0xa7, 0x2c, 0xe6, 0xa3, 0xf3, 0xd1, 0x6c, 0x5a, 0x36, 0xb3, 0xbc, 0x84, 0xbd, 0xb7, 0x8a,
	0x58, 0x2d, 0x12, 0x68, 0x69, 0xa8, 0x83, 0xd6, 0xb3, 0x9c, 0xc1, 0xfe, 0x9c, 0x6d, 0x65, 0x08,
	0x23, 0x75, 0x04, 0x63, 0x4d, 0x06, 0x5d, 0x68, 0xb9, 0x76, 0x93, 0x57, 0x70, 0xf8, 0xfa, 0x89,
	0x44, 0x73, 0xb6, 0x56, 0xb9, 0x4e, 0x34, 0x87, 0x89, 0xde, 0x9c, 0xb4, 0x7c, 0x5c, 0xe5, 0x05,
	0xec, 0x96, 0x58, 0xd1, 0xdf, 0x1a, 0xb1, 0x58, 0xd7, 0xea, 0x23, 0x5a, 0xc7, 0xf5, 0xfa, 0x7f,
	0x1b, 0x26, 0x4f, 0x1e, 0x31, 0xa0, 0x17, 0x77, 0x6d, 0xa4, 0x17, 0xcf, 0x5f, 0xa8, 0x83, 0x38,
	0x2e, 0xba, 0xb8, 0x45, 0x9a, 0xf5, 0xf4, 0x20, 0xb9, 0x68, 0x0c, 0xe4, 0x96, 0xb8, 0x05, 0xd8,
	0x64, 0x7d, 0x34, 0x84, 0x22, 0x4f, 0x88, 0x5e, 0x05, 0x83, 0x6f, 0xef, 0xbb, 0x0a, 0xa2, 0xf5,
	0x49, 0x42, 0xf5, 0xdb, 0x19, 0x14, 0x78, 0x80, 0x2c, 0x6d, 0x46, 0x9c, 0x25, 0xcc, 0x40, 0x65,
	0x43, 0x1a, 0xef, 0xe3, 0xe6, 0x8b, 0x6f, 0x56, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x0f, 0xee,
	0xd7, 0xf2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	MkdirProject(ctx context.Context, in *MkdirRequest, opts ...grpc.CallOption) (*Reply, error)
	UploadFile(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*Reply, error)
	CompileProject(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*Reply, error)
	ShellCommand(ctx context.Context, in *ShellCommandRequest, opts ...grpc.CallOption) (*Reply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) MkdirProject(ctx context.Context, in *MkdirRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/interface.Greeter/MkdirProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) UploadFile(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/interface.Greeter/UploadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) CompileProject(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/interface.Greeter/CompileProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) ShellCommand(ctx context.Context, in *ShellCommandRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/interface.Greeter/ShellCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	MkdirProject(context.Context, *MkdirRequest) (*Reply, error)
	UploadFile(context.Context, *UploadRequest) (*Reply, error)
	CompileProject(context.Context, *CompileRequest) (*Reply, error)
	ShellCommand(context.Context, *ShellCommandRequest) (*Reply, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) MkdirProject(ctx context.Context, req *MkdirRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MkdirProject not implemented")
}
func (*UnimplementedGreeterServer) UploadFile(ctx context.Context, req *UploadRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadFile not implemented")
}
func (*UnimplementedGreeterServer) CompileProject(ctx context.Context, req *CompileRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompileProject not implemented")
}
func (*UnimplementedGreeterServer) ShellCommand(ctx context.Context, req *ShellCommandRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShellCommand not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_MkdirProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkdirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).MkdirProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/interface.Greeter/MkdirProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).MkdirProject(ctx, req.(*MkdirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_UploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).UploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/interface.Greeter/UploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).UploadFile(ctx, req.(*UploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_CompileProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CompileProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/interface.Greeter/CompileProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CompileProject(ctx, req.(*CompileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_ShellCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShellCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).ShellCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/interface.Greeter/ShellCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).ShellCommand(ctx, req.(*ShellCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "interface.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MkdirProject",
			Handler:    _Greeter_MkdirProject_Handler,
		},
		{
			MethodName: "UploadFile",
			Handler:    _Greeter_UploadFile_Handler,
		},
		{
			MethodName: "CompileProject",
			Handler:    _Greeter_CompileProject_Handler,
		},
		{
			MethodName: "ShellCommand",
			Handler:    _Greeter_ShellCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "common.proto",
}
